#! /usr/bin/env -S nice raku

use v6;
use Shell::Piping;

my int $exitcode = 0;

multi sub MAIN(‚test‘, $dir = ‚.‘, Bool :$verbose?) {

    constant cores = $*KERNEL.cpu-cores - 1;
    constant NL = $?NL;
    my &RED = { „\e[31m$_\e[0m“ };
    my &BOLD = { „\e[1m$_\e[0m“ };

    &RED = &BOLD = { $_ } unless $*OUT.t;

    sub run-test(IO::Path $file where { .e & .f }) {
        my @out;
        my @err;
        my $failed;
        px«raku -Ilib $file» |» @out :stderr(@err) :done({$exitcode ⚛= 1 if .exitcodes.so});

        („Testing: {$file}“.&BOLD, @out, @err».&RED).flat.join(NL);
    }

    .put for dir(‚t/‘).grep(*.extension eq ‚t‘).sort.hyper(:batch(1), :degree(cores)).map(*.&run-test);

    exit $exitcode;
}

multi sub MAIN() {
    MAIN(‚test‘, ‚.‘)
}
